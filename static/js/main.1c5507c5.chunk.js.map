{"version":3,"sources":["hooks/useLoop.js","components/InputForm/InputForm.js","config.js","components/RangeInput/RangeInput.js","components/PhraseLoopPlayer/PhraseLoopPlayer.js","hooks/useReactPlayerCallback.js","hooks/useLoopIndex.js","components/PhraseLoopPlayerContainer/PhraseLoopPlayerContainer.js","App.js","serviceWorker.js","ErrorBoundary.js","index.js"],"names":["intervalID","setInputValues","initialValues","url","averageDuration","onSubmit","values","a","localStorage","setItem","handleChange","handleSubmit","Form","Row","className","Group","as","Col","sm","xl","InputGroup","Text","Control","name","type","value","onChange","Button","block","debounce","regions","duration","loopRegion","setLoopRegion","playedSeconds","marks","useMemo","reduce","prev","start","end","Number","toFixed","min","Math","max","step","s","e","PhraseLoopPlayer","playerRef","useRef","useState","player","setPlayer","setDuration","playbackRate","setPlaybackRate","videoState","setVideoState","onReady","useCallback","current","getDuration","onProgress","state","useReactPlayerCallback","useLocalStorageState","loopIndex","setLoopIndex","addLoopIndex","tmp","length","nextIndex","useLoopIndex","useEffect","clearInterval","setInterval","currentTime","getCurrentTime","seekTo","useLoop","handleSeekChange","time","index","findIndex","handlers","next","previous","keyMap","allowChanges","playing","ref","width","height","window","innerHeight","RangeInput","onClick","map","speed","variant","key","active","text","PhraseLoopPlayerContainer","setRegions","fetchCaptions","queryString","parse","match","pop","v","to","getSubtitles","videoID","lang","err","captions","toast","error","JSON","stringify","Object","getOwnPropertyNames","intersection","fixOverlap","chunked","chunkRegions","curr","prevRegion","region","chunkSize","round","dur","chunks","Array","keys","App","getItem","inputValues","Container","InputForm","Boolean","location","hostname","ErrorBoundary","props","hasError","this","children","React","Component","Root","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1c5507c5.chunk.js","sourcesContent":["import { useEffect } from \"react\"\n\nlet intervalID\n\nexport default function useLoop({ player, loopRegion }) {\n  useEffect(() => {\n    clearInterval(intervalID)\n    if (!player || !loopRegion) {\n      return () => {}\n    }\n    const { start, end } = loopRegion\n    intervalID = setInterval(() => {\n      const currentTime = player.getCurrentTime()\n      if (currentTime < start) {\n        player.seekTo(start, \"seconds\")\n      }\n      if (currentTime > end) {\n        player.seekTo(start, \"seconds\")\n      }\n    }, 25)\n    return () => clearInterval(intervalID)\n  }, [loopRegion, player])\n}\n","import React from \"react\"\nimport { InputGroup, Form, Button, Col } from \"react-bootstrap\"\nimport { Formik } from \"formik\"\nimport { Persist } from \"@engrjabi/formik-persist\"\n\nexport default function({ setInputValues }) {\n  return (\n    <Formik\n      initialValues={{ url: \"\", averageDuration: 5 }}\n      onSubmit={async values => {\n        localStorage.setItem(\"loopIndex\", 0)\n        setInputValues(values)\n      }}\n    >\n      {({ values, handleChange, handleSubmit }) => (\n        <Form onSubmit={handleSubmit}>\n          <Form.Row className=\"d-md-flex\">\n            <Form.Group as={Col} sm=\"12\" xl=\"8\" className=\"d-flex\">\n              <InputGroup.Text>url</InputGroup.Text>\n              <Form.Control\n                name=\"url\"\n                type=\"text\"\n                value={values.url}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group as={Col} sm=\"12\" xl=\"3\" className=\"d-flex\">\n              <InputGroup.Text>average duration</InputGroup.Text>\n              <Form.Control\n                name=\"averageDuration\"\n                type=\"number\"\n                value={values.averageDuration}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Col sm=\"12\" xl=\"1\">\n              <Button block type=\"submit\" className=\"mb-3 mx-0\">\n                submit\n              </Button>\n            </Col>\n          </Form.Row>\n          <Persist name=\"settings\" debounce={100} />\n        </Form>\n      )}\n    </Formik>\n  )\n}\n","const RANGE = 10\n\n// eslint-disable-next-line import/prefer-default-export\nexport { RANGE }\n","import React, { useMemo } from \"react\"\nimport { Range } from \"rc-slider\"\nimport { RANGE } from \"../../config\"\n\nexport default function({\n  regions,\n  duration,\n  loopRegion,\n  setLoopRegion,\n  playedSeconds\n}) {\n  const marks = useMemo(() => {\n    return regions.reduce((prev, { start, end }) => {\n      if (start < loopRegion.start - RANGE || end > loopRegion.end + RANGE) {\n        return prev\n      }\n      prev[start] = Number(start.toFixed(1))\n      prev[end] = Number(end.toFixed(1))\n      return prev\n    }, {})\n  }, [loopRegion.end, loopRegion.start, regions])\n\n  const value = loopRegion\n    ? [loopRegion.start, loopRegion.end]\n    : [playedSeconds, playedSeconds]\n  return (\n    <Range\n      value={value}\n      min={Math.max(0, loopRegion.start - RANGE)}\n      max={Math.min(duration, loopRegion.end + RANGE)}\n      step={0.01}\n      marks={marks}\n      onChange={([s, e]) => {\n        setLoopRegion({ start: s, end: e })\n      }}\n    />\n  )\n}\n","import React, { useRef, useState, useEffect, useCallback } from \"react\"\nimport \"rc-slider/assets/index.css\"\nimport ReactPlayer from \"react-player\"\nimport { GlobalHotKeys } from \"react-hotkeys\"\nimport { InputGroup, Button } from \"react-bootstrap\"\nimport Slider from \"rc-slider\"\n\nimport useLoop from \"../../hooks/useLoop\"\nimport useReactPlayerCallback from \"../../hooks/useReactPlayerCallback\"\nimport useLoopIndex from \"../../hooks/useLoopIndex\"\nimport RangeInput from \"../RangeInput\"\n\nfunction PhraseLoopPlayer({ url, regions }) {\n  const playerRef = useRef()\n  const [player, setPlayer] = useState()\n  const [duration, setDuration] = useState(0)\n  const [playbackRate, setPlaybackRate] = useState(1)\n  const [videoState, setVideoState] = useState({ playedSeconds: 0 })\n  const { onReady, onProgress } = useReactPlayerCallback({\n    setPlayer,\n    setDuration,\n    playerRef,\n    setVideoState\n  })\n  const { loopIndex, setLoopIndex, addLoopIndex } = useLoopIndex(regions)\n  const [loopRegion, setLoopRegion] = useState(regions[loopIndex])\n  useLoop({ player, loopRegion })\n  useEffect(() => {\n    setLoopRegion(regions[loopIndex])\n  }, [loopIndex, regions])\n\n  const handleSeekChange = useCallback(\n    time => {\n      setLoopRegion(null)\n      const index = regions.findIndex(\n        ({ start, end }) => start < time && time < end\n      )\n      if (index !== -1) {\n        setLoopIndex(index)\n      }\n    },\n    [regions, setLoopIndex]\n  )\n\n  const handlers = {\n    next: () => addLoopIndex(1),\n    previous: () => addLoopIndex(-1)\n  }\n\n  const keyMap = {\n    next: [\"right\"],\n    previous: [\"left\"]\n  }\n\n  if (!regions || regions.length === 0 || !loopRegion) {\n    return <div />\n  }\n\n  return (\n    <GlobalHotKeys keyMap={keyMap} handlers={handlers} allowChanges>\n      <h5>player</h5>\n      <ReactPlayer\n        playing\n        ref={playerRef}\n        url={url}\n        onReady={onReady}\n        onProgress={onProgress}\n        width=\"100%\"\n        height={window.innerHeight / 2}\n        playbackRate={playbackRate}\n      />\n      <Slider\n        className=\"my-5\"\n        value={videoState.playedSeconds}\n        min={0}\n        max={duration}\n        step={0.01}\n        onChange={handleSeekChange}\n      />\n      <RangeInput\n        regions={regions}\n        duration={duration}\n        loopRegion={loopRegion}\n        setLoopRegion={setLoopRegion}\n        playedSeconds={videoState.playedSeconds}\n      />\n      <div className=\"mt-5 d-flex\">\n        <Button className=\"mr-1\" onClick={() => addLoopIndex(-1)}>\n          Previous\n        </Button>\n        <Button className=\"mr-1\" onClick={() => addLoopIndex(1)}>\n          Next\n        </Button>\n        <InputGroup.Text className=\"mr-1\">playback rate</InputGroup.Text>\n        {[0.25, 0.5, 0.75, 1, 1.25, 1.5].map(speed => (\n          <Button\n            variant=\"outline-secondary\"\n            className=\"mr-1\"\n            key={speed}\n            active={playbackRate === speed}\n            onClick={() => setPlaybackRate(speed)}\n          >\n            {speed}\n          </Button>\n        ))}\n      </div>\n      <p>{loopRegion.text}</p>\n    </GlobalHotKeys>\n  )\n}\n\nexport default PhraseLoopPlayer\n","import { useCallback } from \"react\"\n\nexport default function useReactPlayerCallback({\n  setPlayer,\n  setDuration,\n  playerRef,\n  setVideoState\n}) {\n  const onReady = useCallback(() => {\n    setPlayer(playerRef.current)\n    setDuration(playerRef.current.getDuration())\n  }, [playerRef, setDuration, setPlayer])\n  const onProgress = useCallback(\n    state => {\n      setVideoState(state)\n    },\n    [setVideoState]\n  )\n  return { onReady, onProgress }\n}\n","import { useCallback } from \"react\"\nimport useLocalStorageState from \"use-local-storage-state\"\n\nexport default function useLoopIndex(regions) {\n  const [loopIndex, setLoopIndex] = useLocalStorageState(\"loopIndex\", 0)\n  const addLoopIndex = useCallback(\n    step => {\n      const tmp = Math.min(step + loopIndex, regions.length - 1)\n      const nextIndex = Math.max(tmp, 0)\n      setLoopIndex(nextIndex)\n    },\n    [loopIndex, regions, setLoopIndex]\n  )\n  return { loopIndex, setLoopIndex, addLoopIndex }\n}\n","import React, { useEffect } from \"react\"\nimport to from \"await-to-js\"\nimport { toast } from \"react-toastify\"\nimport queryString from \"query-string\"\nimport useLocalStorageState from \"use-local-storage-state\"\nimport { getSubtitles } from \"youtube-captions-scraper-yoyota\"\nimport PhraseLoopPlayer from \"../PhraseLoopPlayer/PhraseLoopPlayer\"\n\nexport default function PhraseLoopPlayerContainer({ url, averageDuration }) {\n  const [regions, setRegions] = useLocalStorageState(\"regions\")\n\n  useEffect(() => {\n    if (!url) {\n      return\n    }\n    fetchCaptions({ url, setRegions, averageDuration })\n  }, [averageDuration, setRegions, url])\n\n  if (!regions || regions.length === 0) {\n    return <div />\n  }\n  return <PhraseLoopPlayer url={url} regions={regions} />\n}\n\nasync function fetchCaptions({ url, setRegions, averageDuration }) {\n  const { v } = queryString.parse(url.match(/\\?(.*)/g).pop())\n  const [err, captions] = await to(\n    getSubtitles({\n      videoID: v,\n      lang: \"en\",\n      url: \"https://cors.yoyota.dev/https://www.youtube.com\"\n    })\n  )\n  if (err) {\n    toast.error(JSON.stringify(err, Object.getOwnPropertyNames(err)))\n  }\n  const intersection = fixOverlap(captions)\n  const chunked = chunkRegions({\n    averageDuration,\n    regions: intersection\n  })\n  setRegions(null)\n  setRegions(chunked)\n}\n\nfunction fixOverlap(regions) {\n  if (!regions) {\n    return []\n  }\n  if (regions.length < 3) {\n    return regions\n  }\n  if (regions[0].end === regions[2].start) {\n    return regions.reduce((prev, curr, index) => {\n      if (index % 2 === 1) {\n        const prevRegion = regions[index - 1]\n        const region = {\n          ...prevRegion,\n          text: `${prevRegion.text} ${curr.text}`\n        }\n        prev.pop()\n        return [...prev, region]\n      }\n      return [...prev, curr]\n    }, [])\n  }\n  return regions\n}\n\nfunction chunkRegions({ regions, averageDuration }) {\n  if (!regions || regions.length === 0) {\n    return []\n  }\n  return regions.reduce((prev, curr) => {\n    const region = curr\n    const chunkSize = Math.round(region.dur / averageDuration)\n    const dur = region.dur / chunkSize\n\n    if (chunkSize < 2) {\n      return [...prev, region]\n    }\n\n    const chunks = [...Array(chunkSize).keys()].map(index => {\n      const start = region.start + index * dur\n      return { dur, start, end: start + dur, text: region.text }\n    })\n\n    return [...prev, ...chunks]\n  }, [])\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from \"react\"\nimport { Container } from \"react-bootstrap\"\nimport { ToastContainer } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport InputForm from \"./components/InputForm\"\nimport PhraseLoopPlayerContainer from \"./components/PhraseLoopPlayerContainer\"\n\nfunction App() {\n  const [inputValues, setInputValues] = useState(getFormCachedValues())\n  return (\n    <>\n      <ToastContainer />\n      <Container>\n        <h1>Phrase loop player</h1>\n        <InputForm setInputValues={setInputValues} />\n        <PhraseLoopPlayerContainer {...inputValues} />\n      </Container>\n    </>\n  )\n}\n\nfunction getFormCachedValues() {\n  const { values } = JSON.parse(localStorage.getItem(\"settings\")) || {}\n  return values\n}\n\nexport default App\n","/* eslint-disable */\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hasError: false\n    }\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true,\n      error\n    }\n  }\n  // componentDidCatch(error, errorInfo) {}\n\n  render() {\n    const { state, props } = this\n    if (state.hasError) {\n      return <h1> Something went wrong. </h1>\n    }\n    return props.children\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport ErrorBoundary from \"./ErrorBoundary\"\n\nconst Root = () => (\n  <ErrorBoundary>\n    <App />\n  </ErrorBoundary>\n)\n\nReactDOM.render(<Root />, document.getElementById(\"root\"))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}